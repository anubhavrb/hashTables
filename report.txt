{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;}
\margl1440\margr1440\vieww29560\viewh13060\viewkind0
\deftab543
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f0\b\fs22 \cf2 \CocoaLigature0 Program 2: Nonundergraduate Zarathustrianism\
Harry Zhou, Anubhav Roy Bhattacharya, Collin Epstein\
10/16/17\
CSC321\
Dr. Mossinghoff\
\
After successfully implementing our hash tables, we tested them on the text of the novel \'93Lord of the Flies\'94 by William Golding. We found that generally our hash tables behave as we expected. Our theoretical predictions for linear probing and double hashing closely matched the actual performance of the hash tables. The exception occurred for linear probing and large load factors. As load factor increases, linear probing performs exponentially worse, as expected. Double hashing works the best out of the three collision handling techniques. For low load factors the advantage is negligible, but as load factor increases double hashing noticeably outperforms other collision handling methods.\
\
The data for our trials is supplied below. Incidentally, we found that the most commonly used words in \'93Lord of the Flies\'94 are:\
ralph - 741 times\
piggy - 372 times\
jack - 344 times\
fire - 206 times\
\
Hash Table Performance Statistics with load factor = 0.5, text file lotf.txt:\
Collision Handling    # of Hits             Avg. Probes/Hit       Predicted Probes/Hit  # of Misses           Avg. Probes/Miss      Predicted Probes/Miss Actual Load           \
Linear Probing        34028                 1.16989               1.5                   28529                 2.03519               2.5                   0.500035              \
Quadratic Probing     34028                 1.08675               0                     28529                 1.57787               0                     0.500035              \
Double Hashing        34028                 1.11114               1.38629               28529                 1.53517               2                     0.500035    \
\
Hash Table Performance Statistics with load factor = 0.75, text file lotf.txt:\
Collision Handling    # of Hits             Avg. Probes/Hit       Predicted Probes/Hit  # of Misses           Avg. Probes/Miss      Predicted Probes/Miss Actual Load           \
Linear Probing        34028                 5.22972               2.5                   28529                 7.96393               8.5                   0.750823              \
Quadratic Probing     34028                 2.27216               0                     28529                 3.65232               0                     0.750823              \
Double Hashing        34028                 1.87969               1.84839               28529                 3.38806               4                     0.750823  \
\
Hash Table Performance Statistics with load factor = 0.9, text file lotf.txt:\
Collision Handling    # of Hits             Avg. Probes/Hit       Predicted Probes/Hit  # of Misses           Avg. Probes/Miss      Predicted Probes/Miss Actual Load           \
Linear Probing        34028                 10.4115               5.5                   28529                 100.155               50.5                  0.904001              \
Quadratic Probing     34028                 2.62695               0                     28529                 11.3019               0                     0.904001              \
Double Hashing        34028                 1.76522               2.55843               28528                 8.9531                10                    0.904001   \
\
}